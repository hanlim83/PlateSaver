# Generated by Selenium IDE
import pytest
import time
import json
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.common.action_chains import ActionChains
from selenium.webdriver.support import expected_conditions
from selenium.webdriver.support.wait import WebDriverWait
from selenium.webdriver.common.keys import Keys
from selenium.webdriver.common.desired_capabilities import DesiredCapabilities

class TestCreaterecipe():
  def setup_method(self, method):
    self.driver = webdriver.Chrome()
    self.vars = {}
  
  def teardown_method(self, method):
    self.driver.quit()
  
  def test_createrecipe(self):
    self.driver.get("http://192.168.2.164:8080/recipe/create")
    self.driver.set_window_size(1289, 816)
    self.driver.find_element(By.ID, "recipename").click()
    self.driver.find_element(By.ID, "recipename").send_keys("Chicken croquettes")
    self.driver.find_element(By.ID, "preptime").click()
    self.driver.find_element(By.ID, "preptime").send_keys("20 minutes")
    self.driver.find_element(By.ID, "cookingtime").click()
    self.driver.find_element(By.ID, "cookingtime").send_keys("30 minutes")
    self.driver.find_element(By.ID, "description").click()
    self.driver.find_element(By.ID, "description").send_keys("This recipe is super easy to make")
    self.driver.find_element(By.ID, "servings").click()
    self.driver.find_element(By.ID, "servings").send_keys("4 people")
    self.driver.find_element(By.ID, "photo").click()
    self.driver.find_element(By.CSS_SELECTOR, "#nextbutton > .btn-content").click()
    self.driver.find_element(By.ID, "ingredient0").click()
    self.driver.find_element(By.ID, "ingredient0").send_keys("3 cups of flour")
    self.driver.find_element(By.ID, "ingredient1").click()
    self.driver.find_element(By.ID, "ingredient1").send_keys("4 tablespoons of vinegar")
    self.driver.find_element(By.ID, "ingredient2").click()
    self.driver.find_element(By.ID, "ingredient2").send_keys("1 cup of water")
    self.driver.find_element(By.CSS_SELECTOR, ".show > .form-card .btn-content").click()
    self.driver.find_element(By.ID, "ingredient3").click()
    self.driver.find_element(By.ID, "ingredient3").send_keys("0.5 tablespoon salt")
    self.driver.find_element(By.CSS_SELECTOR, ".show > .btn-primary > .btn-content").click()
    self.driver.find_element(By.ID, "direction0").click()
    self.driver.find_element(By.ID, "direction0").send_keys("Preheat the oven to 170 degrees")
    self.driver.find_element(By.ID, "direction1").click()
    self.driver.find_element(By.ID, "direction1").send_keys("grease the pan for frying")
    self.driver.find_element(By.ID, "direction2").click()
    self.driver.find_element(By.ID, "direction2").send_keys("mix the butter and sugar and salt")
    self.driver.find_element(By.CSS_SELECTOR, ".col-md-6:nth-child(5) .btn-content").click()
    self.driver.find_element(By.ID, "direction3").click()
    self.driver.find_element(By.ID, "direction3").send_keys("Bake the chicken")
    self.driver.find_element(By.CSS_SELECTOR, "#payment > .btn-primary > .btn-content").click()
    self.driver.find_element(By.ID, "calories").click()
    self.driver.find_element(By.ID, "calories").send_keys("228kcal")
    self.driver.find_element(By.ID, "carbs").click()
    self.driver.find_element(By.ID, "carbs").send_keys("220g")
    self.driver.find_element(By.ID, "__BVID__278516___BV__BV_label___").click()
    self.driver.find_element(By.ID, "fat").click()
    self.driver.find_element(By.ID, "fat").send_keys("100g")
    self.driver.find_element(By.ID, "protein").click()
    self.driver.find_element(By.ID, "protein").send_keys("105g")
    self.driver.find_element(By.ID, "sodium").click()
    self.driver.find_element(By.ID, "sodium").send_keys("f")
    self.driver.find_element(By.ID, "cholesterol").click()
    self.driver.find_element(By.ID, "cholesterol").send_keys("0mg")
    self.driver.find_element(By.CSS_SELECTOR, "#submitrecipe > .btn-content").click()
    element = self.driver.find_element(By.ID, "submitrecipe")
    actions = ActionChains(self.driver)
    actions.move_to_element(element).perform()
    self.driver.close()
  
